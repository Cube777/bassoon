#include <string>
#include <vector>
#include <fstream>
#include <dchain/dchain.h>
#include <nihdb/nihdb.h>
#include <curses.h>

#define DBFILE "/.password"

int main()
{
	//Init curses
	initscr();
	noecho();
	cbreak();
	nonl();

	//Test if password db exists
	std::string temp = std::getenv("HOME");
	temp += DBFILE;
	std::ifstream test(temp.c_str());

	if (!test.is_open()) {
		addstr("Error: password database not found. Would you like to create one? [Y/n]: ");
		char c;
		c = getch();
		if (c != '\r')
			addch(c);
		addch('\n');
		addch('\n');

		if ((c == 'y') || (c == 'Y') || (c == '\r')) {
			std::ofstream touch (temp.c_str());
			if (!touch.is_open()) {
				addstr("Cannot open password database for writing. Please make sure that you have write permissions in your home folder\n");
				addstr("Press any key to exit...");
				getch();
				endwin();
				return 1;
			}
			touch.close();
			nihdb::dataBase tempDB(temp);
			tempDB.AddComment("bassoon password database");
			tempDB.AddComment("This file contains all the bassoon passwords");
			tempDB.AddComment("All sensitive data is encrypted using dchain encryption library");
			tempDB.AddComment("Please do not edit this file manually");

			tempDB.CreateSection("meta");
			tempDB.CreateVar("meta", "passwd");
			tempDB.CreateVar("meta", "items");

			std::string passwd;
			bool btemp = false;
			while (!btemp)
			{
				temp.clear();
				passwd.clear();
				c = '\0';
				addstr("-->Enter new password: ");
				while (c != '\r') {
					c = getch();
					if (c != '\r')
						temp += c;
				}
				addch('\n');
				c = '\0';
				addstr("-->Confirm password: ");
				while (c != '\r') {
					c = getch();
					if (c != '\r')
						passwd += c;
				}
				addch('\n');

				btemp = (temp == passwd);
				if (!btemp)
					addstr("Passwords do not match.\n");
			}

			tempDB.ApplyChanges();
			addstr("Database successfully created. Please log in to continue.\n");
		} else
			return 1;
	}
	endwin();
	return 0;
}
